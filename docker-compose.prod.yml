services:
  micro-url-db:
    image: redis:8-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - default

  shortening-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: shortening-service
    restart: unless-stopped
    depends_on:
      - micro-url-db
    environment:
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://micro-url-db:6379
      BASE_URL: https://murl.pw
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.shorten.rule=Host(`murl.pw`) && PathPrefix(`/shorten`)
      - traefik.http.routers.shorten.entrypoints=websecure
      - traefik.http.routers.shorten.priority=100
      - traefik.http.services.shorten.loadbalancer.server.port=3000
      - traefik.http.routers.shorten.middlewares=cors-header
      - traefik.http.routers.shorten.tls=true
      - traefik.http.middlewares.cors-header.headers.accesscontrolallowmethods=GET,POST,OPTIONS
      - traefik.http.middlewares.cors-header.headers.accesscontrolallowheaders=*
      - traefik.http.middlewares.cors-header.headers.accesscontrolalloworiginlist=https://murl.pw
      - traefik.http.middlewares.cors-header.headers.addvaryheader=true
      - traefik.docker.network=dokploy-network
    networks:
      - default
      - reverse_proxy

  forwarding-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: forwarding-service
    restart: unless-stopped
    depends_on:
      - micro-url-db
    environment:
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://micro-url-db:6379
      BASE_URL: https://murl.pw
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.forward.rule=Host(`murl.pw`) && PathRegexp(`^/[A-Za-z0-9_-]+$`)
      - traefik.http.routers.forward.entrypoints=websecure
      - traefik.http.routers.forward.priority=90
      - traefik.http.routers.forward.middlewares=cors-header
      - traefik.http.services.forward.loadbalancer.server.port=3000
      - traefik.http.routers.forward.tls=true
      - traefik.docker.network=dokploy-network
    networks:
      - default
      - reverse_proxy

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-https://murl.pw}
    restart: unless-stopped
    expose:
      - "80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`murl.pw`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.priority=10
      - traefik.http.services.frontend.loadbalancer.server.port=80
      - traefik.http.routers.frontend.tls=true
      - traefik.docker.network=dokploy-network
    networks:
      - default
      - reverse_proxy

networks:
  default:
    name: micro-url_default
  reverse_proxy:
    external: true
    name: dokploy-network

volumes:
  redis-data:
    external: true
    name: dokploy-redis-data
